Sub ComparerExtracts()
    Dim ws As Worksheet
    Dim wsResult As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Long
    Dim arr1(), arr2()
    Dim dict1 As Object, dict2 As Object
    Dim key As String
    Dim matchCount As Long

    Set ws = ThisWorkbook.Sheets(1) ' Feuille contenant les données
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' Création dictionnaires pour stocker les lignes
    Set dict1 = CreateObject("Scripting.Dictionary")
    Set dict2 = CreateObject("Scripting.Dictionary")

    ' Parcours des lignes pour séparer les 2 groupes
    For i = 2 To lastRow
        If ws.Cells(i, 1).Value = "1er extract du fichier" Then
            key = LigneSansColonneL(ws, i)
            dict1(key) = i ' On enregistre la ligne
        ElseIf ws.Cells(i, 1).Value = "2EME extract du fichier" Then
            key = LigneSansColonneL(ws, i)
            dict2(key) = i
        End If
    Next i

    ' Création de la feuille résultat
    On Error Resume Next
    Application.DisplayAlerts = False
    ThisWorkbook.Sheets("Lignes Identiques").Delete
    Application.DisplayAlerts = True
    On Error GoTo 0

    Set wsResult = ThisWorkbook.Sheets.Add
    wsResult.Name = "Lignes Identiques"
    ws.Rows(1).Copy Destination:=wsResult.Rows(1)
    matchCount = 2

    ' Comparaison : si une ligne du 1er extract est aussi dans le 2ème
    For Each key In dict1.Keys
        If dict2.exists(key) Then
            ws.Rows(dict1(key)).Copy Destination:=wsResult.Rows(matchCount)
            matchCount = matchCount + 1
        End If
    Next key

    MsgBox matchCount - 2 & " lignes identiques trouvées (hors colonne L).", vbInformation
End Sub

Function LigneSansColonneL(ws As Worksheet, rowNum As Long) As String
    Dim result As String
    Dim col As Long
    result = ""
    For col = 2 To 19 ' Colonnes B (2) à S (19)
        If col <> 12 Then ' Colonne L = 12
            result = result & "|" & ws.Cells(rowNum, col).Text
        End If
    Next col
    LigneSansColonneL = result
End Function
